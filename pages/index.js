import Head from "next/head";
import React, { useState } from "react";
import styles from "../styles/Home.module.css";
import Header from "../comps/Header";

export default function Home() {
  const [fetchedData, setFetchedData] = useState([]);
  const [currentlyOpenedModule, setCurrentlyOpenedModule] = useState();
  const [moduleKeys, setModuleKeys] = useState([]);

  function displayData(e) {
    setCurrentlyOpenedModule(e.target.id);
    fetchData(e.target.id);
  }

  function fetchData(target) {
    fetch("./data/" + target + ".json")
      .then((response) => response.json())
      .then((data) => {
        setFetchedData(data);
        setModuleKeys(Object.keys(data[0]));
      });
  }

  function markEntryAsFinished(entry) {
    console.log("Finished " + entry.title);
  }

  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Header displayData={displayData} />

      <div id={styles.viewer}>
        <h1 style={{ textAlign: "center" }}>
          {currentlyOpenedModule
            ? currentlyOpenedModule.toUpperCase()
            : "Hello there."}
        </h1>
        <div id={styles.moduleContainer}>
          {fetchedData.map((e1, i1) => {
            return (
              <div className={styles.card} key={"1" + i1}>
                {moduleKeys.map((e2, i2) => {
                  let currentKey = moduleKeys[i2];
                  let currentValue = e1[currentKey];
                  return (
                    <div key={"2" + i2}>
                      {currentKey === "coverImage" ? (
                        <div
                          style={{
                            width: "250px",
                            margin: "20px",
                            float: "left",
                          }}
                        >
                          <img
                            className={styles.coverImage}
                            src={currentValue}
                            style={{ objectFit: "cover", width: "100%" }}
                          />
                        </div>
                      ) : currentKey === "links" ? (
                        <div className={styles.linksContainer}>
                          {Object.keys(currentValue).map((e3, i3) => {
                            return (
                              <a
                                href={currentValue[e3].link}
                                key={"3" + i3}
                                rel="nofollow noopener"
                              >
                                <img
                                  src={currentValue[e3].icon}
                                  style={{
                                    width: "10%",
                                    aspectRatio: "1/1",
                                    objectFit: "cover",
                                    margin: "10px",
                                    padding: "5px",
                                  }}
                                />
                              </a>
                            );
                          })}
                        </div>
                      ) : currentKey === "isCanon" ? null : (
                        <h2
                          style={{
                            textTransform: "uppercase",
                            fontWeight: "900",
                          }}
                        >
                          {currentKey.replace(/([A-Z])/g, " $1")}:
                        </h2>
                      )}

                      {currentKey === "title" ? <p>{currentValue}</p> : null}
                      {currentKey === "author" ? <p>{currentValue}</p> : null}
                      {currentKey === "releaseDate" ? (
                        <p>{currentValue}</p>
                      ) : null}
                      {currentKey === "era" ? <p>{currentValue}</p> : null}
                      {currentKey === "date" ? <p>{currentValue}</p> : null}
                      {currentKey === "isCanon" ? <p>{currentValue}</p> : null}
                    </div>
                  );
                })}
                <button
                  onClick={() => markEntryAsFinished(e1)}
                  className={styles.finishedBtn}
                >
                  Mark as Finished
                </button>
              </div>
            );
          })}
        </div>
      </div>
    </div>
  );
}
